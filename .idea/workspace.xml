<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0a0811fc-3e18-4fac-aedd-396e5d8fb14a" name="更改" comment="Add health check and service registration functionality&#10;&#10;Implement a health check server and a service registration manager to register and manage services in APISIX. The health check server provides a `/health` endpoint, and the registration manager handles service registration, graceful shutdown, and signal handling. Examples and documentation are also included.">
      <change afterPath="$PROJECT_DIR$/.idea/apisix-registration.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/git_toolbox_prj.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/client.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/errors.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/examples/advanced/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/examples/async/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/examples/basic/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/examples/gozero/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/health.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/registration.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitToolBoxStore">
    <option name="recentBranches">
      <RecentBranches>
        <option name="branchesForRepo">
          <list>
            <RecentBranchesForRepo>
              <option name="branches">
                <list>
                  <RecentBranch>
                    <option name="branchName" value="dev" />
                    <option name="lastUsedInstant" value="1743095961" />
                  </RecentBranch>
                  <RecentBranch>
                    <option name="branchName" value="main" />
                    <option name="lastUsedInstant" value="1743095960" />
                  </RecentBranch>
                </list>
              </option>
              <option name="repositoryRootUrl" value="file://$PROJECT_DIR$" />
            </RecentBranchesForRepo>
          </list>
        </option>
      </RecentBranches>
    </option>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/gin-gonic/gin@v1.9.1/gin.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/go.uber.org/zap@v1.27.0/logger.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/go/src/net/http/server.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/go/src/net/http/status.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2uu2IwXtFWtYDWGWfzWtIjTfqAN" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "dev",
    "go.import.settings.migrated": "true",
    "last_opened_file_path": "/Users/coke/Documents/HecokeWork/github/apisix-registration",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "onboarding.tips.debug.path": "/Users/coke/Documents/HecokeWork/github/apisix-registration-discovery/main.go",
    "settings.editor.selected.configurable": "preferences.pluginManager"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-d297c17c1fbd-57c114c3cede-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-243.26053.20" />
        <option value="bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-GO-243.26053.20" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Add health check server and service registration manager&#10;&#10;Implement a health check server and a service registration manager to handle service registration, health checks, and graceful shutdown for APISIX. The health check server provides an HTTP endpoint for health status, and the registration manager manages the lifecycle of the service, including registration, deregistration, and signal handling." />
    <MESSAGE value="Add health check and service registration functionality&#10;&#10;Implement a health check server and a service registration manager to handle service registration, health checks, and graceful shutdown for APISIX. The health check server provides an HTTP endpoint for health status, and the registration manager manages the lifecycle of the service, including registration, deregistration, and signal handling. Examples and documentation are also included." />
    <MESSAGE value="Add health check and service registration functionality&#10;&#10;Implement a health check server and a service registration manager to register and manage services in APISIX. The health check server provides a `/health` endpoint, and the registration manager handles service registration, graceful shutdown, and signal handling. Examples and documentation are also included." />
    <MESSAGE value="Initial commit" />
    <option name="LAST_COMMIT_MESSAGE" value="Initial commit" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>